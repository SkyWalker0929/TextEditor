<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>